// Ejemplo de c√≥mo usar los endpoints de categor√≠as
// IMPORTANTE: Para obtener un token v√°lido, usa el hook useAuth() en tu frontend:
// const { getToken } = useAuth();
// const token = await getToken();
// 
// O para pruebas, obt√©n el token de la cookie __session en el navegador
// despu√©s de iniciar sesi√≥n con Clerk

const BASE_URL = 'http://localhost:3001/api';

// Ejemplo de creaci√≥n de categor√≠a
const createCategoria = async () => {
  const response = await fetch(`${BASE_URL}/categorias`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer <CLERK_TOKEN>'
    },
    body: JSON.stringify({
      nombre: 'Comida',
      tipo: 'gasto',
      icono: 'üçï',
      color: '#FF6B6B'
    })
  });
  
  const data = await response.json();
  console.log('Categor√≠a creada:', data);
  return data;
};

// Ejemplo de obtenci√≥n de categor√≠as
const getCategorias = async () => {
  const response = await fetch(`${BASE_URL}/categorias`, {
    headers: {
      'Authorization': 'Bearer <CLERK_TOKEN>'
    }
  });
  
  const data = await response.json();
  console.log('Categor√≠as:', data);
  return data;
};

// Ejemplo de obtenci√≥n de categor√≠as por tipo
const getCategoriasPorTipo = async (tipo) => {
  const response = await fetch(`${BASE_URL}/categorias/tipo/${tipo}`, {
    headers: {
      'Authorization': 'Bearer <CLERK_TOKEN>'
    }
  });
  
  const data = await response.json();
  console.log(`Categor√≠as de ${tipo}:`, data);
  return data;
};

// Ejemplo de actualizaci√≥n de categor√≠a
const updateCategoria = async (id) => {
  const response = await fetch(`${BASE_URL}/categorias/${id}`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer <CLERK_TOKEN>'
    },
    body: JSON.stringify({
      nombre: 'Comida y Bebidas',
      tipo: 'gasto',
      icono: 'üçï',
      color: '#FF6B6B'
    })
  });
  
  const data = await response.json();
  console.log('Categor√≠a actualizada:', data);
  return data;
};

// Ejemplo de eliminaci√≥n de categor√≠a
const deleteCategoria = async (id) => {
  const response = await fetch(`${BASE_URL}/categorias/${id}`, {
    method: 'DELETE',
    headers: {
      'Authorization': 'Bearer <CLERK_TOKEN>'
    }
  });
  
  if (response.status === 204) {
    console.log('Categor√≠a eliminada exitosamente');
  }
};

// Ejemplo de uso con async/await
const testCategoriasEndpoints = async () => {
  try {
    // Crear categor√≠a
    const nuevaCategoria = await createCategoria();
    
    // Obtener todas las categor√≠as
    await getCategorias();
    
    // Obtener categor√≠as por tipo
    await getCategoriasPorTipo('gasto');
    await getCategoriasPorTipo('ingreso');
    
    // Actualizar categor√≠a
    await updateCategoria(nuevaCategoria.id);
    
    // Eliminar categor√≠a
    await deleteCategoria(nuevaCategoria.id);
    
  } catch (error) {
    console.error('Error:', error);
  }
};

// Descomenta la l√≠nea siguiente para ejecutar las pruebas
// testCategoriasEndpoints(); 